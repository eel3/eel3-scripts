#!/usr/bin/env python3
# encoding: utf-8
# -*- coding: utf-8-unix -*-
# vim:fileencoding=utf-8:ff=unix
# @(#) Command line tool to add header and footer. Version 2.0.2.20220420
"""Command line tool to add header and footer.

Example:
    $ seq 3 | ahaf -a HEAD -f TAIL
    HEAD
    1
    2
    3
    TAIL
    $ _
"""

from __future__ import annotations

import argparse
import sys

from typing import NoReturn, TextIO


def ahaf(istream: TextIO, ostream: TextIO, header: str, footer: str) -> None:
    """Insert a header and a footer.

    Args:
        istream (TextIO): Input text IO stream.
        ostream (TextIO): Output text IO stream.
        header (str): Header string.
        footer (str): Footer string.
    """
    print(header, file=ostream)
    ostream.write(istream.read())
    print(footer, file=ostream)


def parse_args() -> tuple[argparse.Namespace, list[str]]:
    """Parse CLI arguments.

    Returns:
        tuple[argparse.Namespace, list[str]]: Results of argument parsing.
    """
    parser = argparse.ArgumentParser(description=
            'Command line tool to add header and footer.')

    parser.add_argument('files', metavar='file', nargs='*', help="input file")
    parser.add_argument('-a', '--header', metavar='header', nargs=1,
                        default=[''], help='header text')
    parser.add_argument('-f', '--footer', metavar='footer', nargs=1,
                        default=[''], help='footer text')
    parser.add_argument('-o', '--output', metavar='file', nargs=1,
                        type=argparse.FileType('w'), default=[sys.stdout],
                        help="place output in file")
    parser.add_argument('-v', '--version', action='version',
                        version='%(prog)s 2.0.2')

    return parser.parse_known_args()


def main() -> NoReturn:
    """Main routine function.
    """
    args = parse_args()

    files = args[0].files
    if len(files) <= 0:
        files.append('-')

    header = args[0].header[0]
    footer = args[0].footer[0]
    ostream = args[0].output[0]
    retval = 0

    for f in files:
        try:
            if f == '-':
                ahaf(sys.stdin, ostream, header, footer)
            else:
                with open(f, 'r') as istream:
                    ahaf(istream, ostream, header, footer)
        except Exception as e:
            print(e, file=sys.stderr)
            retval = 1

    sys.exit(retval)


if __name__ == '__main__':
    main()
