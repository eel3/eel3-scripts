#!/usr/bin/env python3
# encoding: utf-8
# -*- coding: utf-8-unix -*-
# vim:fileencoding=utf-8:ff=unix
# @(#) Command line tool to extract PCM data from RIFF WAVE file. Version 2.0.1.20220417
"""Command line tool to extract PCM data from RIFF WAVE file.

Example:
    $ extpcm sample.wav >sample_1.bin
    $ extpcm -o sample_2.bin sample.wav
    $ cmp sample_1.bin sample_2.bin >/dev/null && echo IDENTICAL
    IDENTICAL
    $ _
"""

import argparse
import sys
import wave


def extpcm(wavfile, ostream):
    """Extract PCM data from RIFF WAVE file.

    Args:
        wavfile (str): Target file name.
        ostream (BinaryIO): Output binary IO stream.
    """
    wr = wave.open(wavfile, 'rb')
    ostream.write(wr.readframes(wr.getnframes()))
    wr.close()


def parse_args():
    """Parse CLI arguments.

    Returns:
        tuple[argparse.Namespace, list[str]]: Results of argument parsing.
    """
    parser = argparse.ArgumentParser(description=
            'Command line tool to extract PCM data from RIFF WAVE file.')

    parser.add_argument('files', metavar='file', nargs='+',
                        help="RIFF WAVE file")
    parser.add_argument('-o', '--output', metavar='file', nargs=1,
                        type=argparse.FileType('wb'), default=[sys.stdout.buffer],
                        help="place output in file")
    parser.add_argument('-v', '--version', action='version',
                        version='%(prog)s 2.0.1')

    return parser.parse_known_args()


def main():
    """Main routine function.
    """
    args = parse_args()
    retval = 0

    for f in args[0].files:
        try:
            extpcm(f, args[0].output[0])
        except Exception as e:
            print(e, file=sys.stderr)
            retval = 1

    sys.exit(retval)


if __name__ == '__main__':
    main()
